version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5

executors:
  circleci-python-3-9:
    docker:
      - image: cimg/python:3.9

# Command definitions which can be re-used across multiple jobs
commands:
  restore_pip_cache:
    steps:
      - restore_cache:
          name: 'Restore cache: python env'
          keys:
            # These caches are persisted for 15 days. If you need to reset the cache,
            # just change the "k" to any other value which hasn't been used recently.
            - &pip_cache_key venv-k-{{ checksum "requirements.txt" }}
  save_caches:
    steps:
      - save_cache:
          name: 'Save cache: python venv'
          key: *pip_cache_key
          paths:
            - venv

jobs:
  setup:
    executor: circleci-python-3-9
    steps:
      - checkout
      - run:
          name: Create venv 
          command: python3 -m venv venv
      - run: 
          name: Adding venv to bash
          command: echo "source venv/bin/activate" >> $BASH_ENV
      - restore_pip_cache
      - run: 
          name: pip install
          command: pip install -r requirements.txt
      - save_caches

  lint:
    executor: circleci-python-3-9
    steps:
      - checkout
      - run: 
          name: Adding venv to bash
          command: echo "source venv/bin/activate" >> $BASH_ENV
      - restore_pip_cache
      - run: chmod +x scripts/python_lint.sh
      - run: 
          name: linting
          command: bash scripts/python_lint.sh
  unit_tests:
    executor: circleci-python-3-9
    steps:
      - checkout
      - run: 
          name: Adding venv to bash
          command: echo "source venv/bin/activate" >> $BASH_ENV
      - restore_pip_cache
      - run: chmod +x scripts/python_unit_test.sh
      - run: 
          name: unit tests
          command: bash scripts/python_unit_test.sh

workflows:
  version: 2
  pipeline:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - unit_tests:
          requires:
            - setup
