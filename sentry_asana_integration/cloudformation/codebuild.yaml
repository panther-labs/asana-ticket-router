AWSTemplateFormatVersion: 2010-09-09
Description: Template for Sentry Asana Codebuild Project

Mappings:
  Secrets:
    Codebuild:
      DockerSecretArn: arn:aws:secretsmanager:us-west-2:812141001309:secret:Yusuf_Akhtar_Dockerhub-HRMWZ7
    Pulumi:
      PulumiSecretArn: arn:aws:secretsmanager:us-west-2:812141001309:secret:Yusuf_Akhtar_Pulumi_Access_Token-B9pE0o
    SentryAsana:
      SentryAsanaSecretArn: arn:aws:secretsmanager:us-west-2:812141001309:secret:integration/sentry-asana-r8Xg3w
    Github:
      GithubSecretArn: arn:aws:secretsmanager:us-west-2:812141001309:secret:Panther_Bot_Github_Access_Token-TIuxHZ
  Params:
    Pulumi:
      PulumiOrgName: panther-dev

Resources:
  GithubToken:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      Token: '{{resolve:secretsmanager:arn:aws:secretsmanager:us-west-2:812141001309:secret:Panther_Bot_Github_Access_Token-TIuxHZ:SecretString:GITHUB_ACCESS_TOKEN}}'
      ServerType: GITHUB
      AuthType: PERSONAL_ACCESS_TOKEN

  SentryAsanaPulumiCodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: GithubToken
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      ConcurrentBuildLimit: 1
      Description: Create Sentry Asana Integration Service with Pulumi
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        EnvironmentVariables:
          - Name: STACK_NAME
            Value: !Sub
              - ${PulumiOrgName}/${AWS::AccountId}-${AWS::Region}
              - PulumiOrgName: !FindInMap [Params, Pulumi, PulumiOrgName]
          - Name: PULUMI_ACCESS_TOKEN
            Type: SECRETS_MANAGER
            Value: !Sub
              - ${PulumiSecretArn}:PULUMI_ACCESS_TOKEN
              - PulumiSecretArn: !FindInMap [Secrets, Pulumi, PulumiSecretArn]
        Image: pulumi/pulumi-python
        ImagePullCredentialsType: CODEBUILD
        # ImagePullCredentialsType: SERVICE_ROLE
        # RegistryCredential:
        #   Credential: !FindInMap [Secrets, Codebuild, DockerSecretArn]
        #   CredentialProvider: SECRETS_MANAGER
        Type: LINUX_CONTAINER
      Name: panther-pulumi
      ServiceRole: !Ref PulumiCodeBuildRole
      Source:
        BuildSpec: |
          version: 0.2
          phases:
            install:
              commands:
                - python3 -m venv venv
                - venv/bin/pip3 install pulumi pulumi-aws
                - sed -i 's/..\/..\/.setup\/venv/venv/g' Pulumi.yaml
            pre_build:
              commands:
                - pulumi version
                - pulumi whoami
                - pulumi stack init --stack $STACK_NAME || echo "stack already exists"
            build:
              commands:
                - pulumi up --skip-preview --yes --stack $STACK_NAME
        GitCloneDepth: 1
        Location: https://github.com/panther-labs/hosted-ops.git
        Type: GITHUB
      # Triggers:
      #   Webhook: true
      #   FilterGroups:
      #     - - Type: EVENT
      #         Pattern: PULL_REQUEST_MERGED
      #         ExcludeMatchedPattern: false

      TimeoutInMinutes: 30

  PulumiCodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub PantherPulumiCodeBuild-${AWS::Region} # Use a fixed role name for org SCP
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildBase
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/panther-pulumi
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/panther-pulumi:*
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sentry-asana-handler
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sentry-asana-handler:log-stream:*
              - Effect: Allow
                Action: iam:*
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sentry-asana-lambda-role-*
              - Effect: Allow
                Action: lambda:*
                Resource: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sentry-asana-handler
              - Effect: Allow
                Action:
                  - apigateway:POST
                  - apigateway:GET
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::sentry-asana-test-deployment-bucket/*
                  - arn:aws:s3:::sentry-asana-test-deployment-bucket
              # (cross-account) secrets manager and KMS for decrypting docker/pulumi credentials
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource:
                  - !FindInMap [Secrets, Codebuild, DockerSecretArn]
                  - !FindInMap [Secrets, Pulumi, PulumiSecretArn]
                  - !FindInMap [Secrets, SentryAsana, SentryAsanaSecretArn]
