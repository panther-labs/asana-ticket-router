USE ROLE ACCOUNTADMIN;
GRANT OPERATE ON WAREHOUSE PANTHER_WH TO CUSTOMER_BI_USER;

CREATE SHARE PANTHER_CLOUDSECURITY_SHARED;
GRANT USAGE ON DATABASE PANTHER_CLOUDSECURITY TO SHARE PANTHER_CLOUDSECURITY_SHARED;
GRANT USAGE ON ALL SCHEMAS IN DATABASE PANTHER_CLOUDSECURITY TO SHARE PANTHER_CLOUDSECURITY_SHARED;
GRANT SELECT ON ALL TABLES IN DATABASE PANTHER_CLOUDSECURITY TO SHARE PANTHER_CLOUDSECURITY_SHARED;

CREATE SHARE PANTHER_LOGS_SHARED;
GRANT USAGE ON DATABASE PANTHER_LOGS TO SHARE PANTHER_LOGS_SHARED;
GRANT USAGE ON ALL SCHEMAS IN DATABASE PANTHER_LOGS TO SHARE PANTHER_LOGS_SHARED;
GRANT SELECT ON ALL TABLES IN DATABASE PANTHER_LOGS TO SHARE PANTHER_LOGS_SHARED;

CREATE SHARE PANTHER_LOOKUPS_SHARED;
GRANT USAGE ON DATABASE PANTHER_LOOKUPS TO SHARE PANTHER_LOOKUPS_SHARED;
GRANT USAGE ON ALL SCHEMAS IN DATABASE PANTHER_LOOKUPS TO SHARE PANTHER_LOOKUPS_SHARED;
GRANT SELECT ON ALL TABLES IN DATABASE PANTHER_LOOKUPS TO SHARE PANTHER_LOOKUPS_SHARED;

CREATE SHARE PANTHER_MONITOR_SHARED;
GRANT USAGE ON DATABASE PANTHER_MONITOR TO SHARE PANTHER_MONITOR_SHARED;
GRANT USAGE ON ALL SCHEMAS IN DATABASE PANTHER_MONITOR TO SHARE PANTHER_MONITOR_SHARED;
GRANT SELECT ON ALL TABLES IN DATABASE PANTHER_MONITOR TO SHARE PANTHER_MONITOR_SHARED;

CREATE SHARE PANTHER_RULE_ERRORS_SHARED;
GRANT USAGE ON DATABASE PANTHER_RULE_ERRORS TO SHARE PANTHER_RULE_ERRORS_SHARED;
GRANT USAGE ON ALL SCHEMAS IN DATABASE PANTHER_RULE_ERRORS TO SHARE PANTHER_RULE_ERRORS_SHARED;
GRANT SELECT ON ALL TABLES IN DATABASE PANTHER_RULE_ERRORS TO SHARE PANTHER_RULE_ERRORS_SHARED;

CREATE SHARE PANTHER_RULE_MATCHES_SHARED;
GRANT USAGE ON DATABASE PANTHER_RULE_MATCHES TO SHARE PANTHER_RULE_MATCHES_SHARED;
GRANT USAGE ON ALL SCHEMAS IN DATABASE PANTHER_RULE_MATCHES TO SHARE PANTHER_RULE_MATCHES_SHARED;
GRANT SELECT ON ALL TABLES IN DATABASE PANTHER_RULE_MATCHES TO SHARE PANTHER_RULE_MATCHES_SHARED;

CREATE SHARE PANTHER_STORED_PROCEDURES_SHARED;
GRANT USAGE ON DATABASE PANTHER_STORED_PROCEDURES TO SHARE PANTHER_STORED_PROCEDURES_SHARED;
GRANT USAGE ON ALL SCHEMAS IN DATABASE PANTHER_STORED_PROCEDURES TO SHARE PANTHER_STORED_PROCEDURES_SHARED;
GRANT SELECT ON ALL TABLES IN DATABASE PANTHER_STORED_PROCEDURES TO SHARE PANTHER_STORED_PROCEDURES_SHARED;

CREATE SHARE PANTHER_VIEWS_SHARED;
GRANT USAGE ON DATABASE PANTHER_VIEWS TO SHARE PANTHER_VIEWS_SHARED;
GRANT USAGE ON ALL SCHEMAS IN DATABASE PANTHER_VIEWS TO SHARE PANTHER_VIEWS_SHARED;
GRANT SELECT ON ALL TABLES IN DATABASE PANTHER_VIEWS TO SHARE PANTHER_VIEWS_SHARED;

// This will share panther_logs.public -- easy to modify to take db/schema as params
CREATE OR REPLACE PROCEDURE PANTHER_STORED_PROCEDURES.PUBLIC.GRANT_SHARES()
	RETURNS VARCHAR NOT NULL
	  LANGUAGE JAVASCRIPT
		EXECUTE AS CALLER
	  AS
$$
var success = true;
var db_updated = [];
var result ='';
var last_cmd = '';
try{
  var stmt = snowflake.createStatement( {sqlText: "SHOW DATABASES;" } );
  var database = stmt.execute(); // TODO: this will be skipped, need to separate while into a function (or something like that)
  while(database.next()) {
    var database_name = database.getColumnValue(2);
    if(database_name == "PANTHER_VIEWS" || database_name == "SNOWFLAKE") {
      next;
    }
    var command = "SHOW VIEWS IN SCHEMA "+database_name+".PUBLIC;"
    var stmt = snowflake.createStatement({sqlText: command});
    stmt.execute();
    command = "SELECT \"name\" FROM TABLE(RESULT_SCAN(LAST_QUERY_ID())); ";
    stmt = snowflake.createStatement({sqlText: command});
    var rs = stmt.execute();
    
    while (rs.next()) {
      schema_name = 'PUBLIC'
      table_name =  rs.getColumnValue(1);
      command = "ALTER VIEW " + database_name + "."+ schema_name +"." + table_name + " SET SECURE;";
      last_cmd = command;
      stmt = snowflake.createStatement({sqlText: command});
      var rs1 = stmt.execute();
      command = "GRANT SELECT ON VIEW " + database_name + "."+ schema_name +"." + table_name + " TO SHARE " + database_name + "_SHARED;";
      stmt = snowflake.createStatement({sqlText: command});
      last_cmd = command;
      var rs1 = stmt.execute();
      db_updated.push(table_name);
    }
    result= 'View grant finished.';
  }
}
catch (err) {
  success = false;
  result = "Failed. Code:"+ err.code +"\nState: "+ last_cmd;
  result += "\nLast Command Attempted: " + last_cmd;
  result += "\nMessage: "+ err.message;
  result += "\nStack Trace: " + err.stackTraceTxt;
  
}   
return JSON.stringify({ Success: success, Message: result , Updated: db_updated});
$$;
      
//call the share    
CALL PANTHER_STORED_PROCEDURES.PUBLIC.GRANT_SHARES();
